// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: ticketBuyers.sql

package database

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createTicketBuyer = `-- name: CreateTicketBuyer :exec
INSERT INTO ticketBuyers(wallet_address, nonce, num_tickets, created_at)
VALUES ($1, $2, $3, $4)
`

type CreateTicketBuyerParams struct {
	WalletAddress string
	Nonce         pgtype.Int2
	NumTickets    int16
	CreatedAt     pgtype.Timestamp
}

func (q *Queries) CreateTicketBuyer(ctx context.Context, arg CreateTicketBuyerParams) error {
	_, err := q.db.Exec(ctx, createTicketBuyer,
		arg.WalletAddress,
		arg.Nonce,
		arg.NumTickets,
		arg.CreatedAt,
	)
	return err
}

const getRaffleMinter = `-- name: GetRaffleMinter :one
SELECT wallet_address, nonce, num_tickets, created_at, updated_at FROM ticketBuyers
WHERE wallet_address = $1
`

func (q *Queries) GetRaffleMinter(ctx context.Context, walletAddress string) (Ticketbuyer, error) {
	row := q.db.QueryRow(ctx, getRaffleMinter, walletAddress)
	var i Ticketbuyer
	err := row.Scan(
		&i.WalletAddress,
		&i.Nonce,
		&i.NumTickets,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
